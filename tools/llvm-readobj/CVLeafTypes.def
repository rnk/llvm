//===-- CVLeafTypes.def - All CodeView leaf types ---------------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// See LEAF_ENUM_e in cvinfo.h. This should match the constants there.
//
//===----------------------------------------------------------------------===//

// 16 bit type records.
LEAF_TYPE(MODIFIER_16t, 0x0001)
LEAF_TYPE(POINTER_16t, 0x0002)
LEAF_TYPE(ARRAY_16t, 0x0003)
LEAF_TYPE(CLASS_16t, 0x0004)
LEAF_TYPE(STRUCTURE_16t, 0x0005)
LEAF_TYPE(UNION_16t, 0x0006)
LEAF_TYPE(ENUM_16t, 0x0007)
LEAF_TYPE(PROCEDURE_16t, 0x0008)
LEAF_TYPE(MFUNCTION_16t, 0x0009)
LEAF_TYPE(VTSHAPE, 0x000a)
LEAF_TYPE(COBOL0_16t, 0x000b)
LEAF_TYPE(COBOL1, 0x000c)
LEAF_TYPE(BARRAY_16t, 0x000d)
LEAF_TYPE(LABEL, 0x000e)
LEAF_TYPE(NULLLEAF, 0x000f) // LF_NULL
LEAF_TYPE(NOTTRAN, 0x0010)
LEAF_TYPE(DIMARRAY_16t, 0x0011)
LEAF_TYPE(VFTPATH_16t, 0x0012)
LEAF_TYPE(PRECOMP_16t, 0x0013)
LEAF_TYPE(ENDPRECOMP, 0x0014)
LEAF_TYPE(OEM_16t, 0x0015)
LEAF_TYPE(TYPESERVER_ST, 0x0016)

LEAF_TYPE(SKIP_16t, 0x0200)
LEAF_TYPE(ARGLIST_16t, 0x0201)
LEAF_TYPE(DEFARG_16t, 0x0202)
LEAF_TYPE(LIST, 0x0203)
LEAF_TYPE(FIELDLIST_16t, 0x0204)
LEAF_TYPE(DERIVED_16t, 0x0205)
LEAF_TYPE(BITFIELD_16t, 0x0206)
LEAF_TYPE(METHODLIST_16t, 0x0207)
LEAF_TYPE(DIMCONU_16t, 0x0208)
LEAF_TYPE(DIMCONLU_16t, 0x0209)
LEAF_TYPE(DIMVARU_16t, 0x020a)
LEAF_TYPE(DIMVARLU_16t, 0x020b)
LEAF_TYPE(REFSYM, 0x020c)

// 16 bit member types. Generally not length prefixed.
LEAF_TYPE(BCLASS_16t, 0x0400)
LEAF_TYPE(VBCLASS_16t, 0x0401)
LEAF_TYPE(IVBCLASS_16t, 0x0402)
LEAF_TYPE(ENUMERATE_ST, 0x0403)
LEAF_TYPE(FRIENDFCN_16t, 0x0404)
LEAF_TYPE(INDEX_16t, 0x0405)
LEAF_TYPE(MEMBER_16t, 0x0406)
LEAF_TYPE(STMEMBER_16t, 0x0407)
LEAF_TYPE(METHOD_16t, 0x0408)
LEAF_TYPE(NESTTYPE_16t, 0x0409)
LEAF_TYPE(VFUNCTAB_16t, 0x040a)
LEAF_TYPE(FRIENDCLS_16t, 0x040b)
LEAF_TYPE(ONEMETHOD_16t, 0x040c)
LEAF_TYPE(VFUNCOFF_16t, 0x040d)

LEAF_TYPE(TI16_MAX, 0x1000)

LEAF_TYPE(MODIFIER, 0x1001)
LEAF_TYPE(POINTER, 0x1002)
LEAF_TYPE(ARRAY_ST, 0x1003)
LEAF_TYPE(CLASS_ST, 0x1004)
LEAF_TYPE(STRUCTURE_ST, 0x1005)
LEAF_TYPE(UNION_ST, 0x1006)
LEAF_TYPE(ENUM_ST, 0x1007)
LEAF_TYPE(PROCEDURE, 0x1008)
LEAF_TYPE(MFUNCTION, 0x1009)
LEAF_TYPE(COBOL0, 0x100a)
LEAF_TYPE(BARRAY, 0x100b)
LEAF_TYPE(DIMARRAY_ST, 0x100c)
LEAF_TYPE(VFTPATH, 0x100d)
LEAF_TYPE(PRECOMP_ST, 0x100e)
LEAF_TYPE(OEM, 0x100f)
LEAF_TYPE(ALIAS_ST, 0x1010)
LEAF_TYPE(OEM2, 0x1011)

LEAF_TYPE(SKIP, 0x1200)
LEAF_TYPE(ARGLIST, 0x1201)
LEAF_TYPE(DEFARG_ST, 0x1202)
LEAF_TYPE(FIELDLIST, 0x1203)
LEAF_TYPE(DERIVED, 0x1204)
LEAF_TYPE(BITFIELD, 0x1205)
LEAF_TYPE(METHODLIST, 0x1206)
LEAF_TYPE(DIMCONU, 0x1207)
LEAF_TYPE(DIMCONLU, 0x1208)
LEAF_TYPE(DIMVARU, 0x1209)
LEAF_TYPE(DIMVARLU, 0x120a)

// Member type records. These are generally not length prefixed, and appear
// inside of a field list record.
LEAF_TYPE(BCLASS, 0x1400)
LEAF_TYPE(VBCLASS, 0x1401)
LEAF_TYPE(IVBCLASS, 0x1402)
LEAF_TYPE(FRIENDFCN_ST, 0x1403)
LEAF_TYPE(INDEX, 0x1404)
LEAF_TYPE(MEMBER_ST, 0x1405)
LEAF_TYPE(STMEMBER_ST, 0x1406)
LEAF_TYPE(METHOD_ST, 0x1407)
LEAF_TYPE(NESTTYPE_ST, 0x1408)
LEAF_TYPE(VFUNCTAB, 0x1409)
LEAF_TYPE(FRIENDCLS, 0x140a)
LEAF_TYPE(ONEMETHOD_ST, 0x140b)
LEAF_TYPE(VFUNCOFF, 0x140c)
LEAF_TYPE(NESTTYPEEX_ST, 0x140d)
LEAF_TYPE(MEMBERMODIFY_ST, 0x140e)
LEAF_TYPE(MANAGED_ST, 0x140f)

LEAF_TYPE(ST_MAX, 0x1500)
LEAF_TYPE(TYPESERVER, 0x1501)
LEAF_TYPE(ENUMERATE, 0x1502)
LEAF_TYPE(ARRAY, 0x1503)
LEAF_TYPE(CLASS, 0x1504)
LEAF_TYPE(STRUCTURE, 0x1505)
LEAF_TYPE(UNION, 0x1506)
LEAF_TYPE(ENUM, 0x1507)
LEAF_TYPE(DIMARRAY, 0x1508)
LEAF_TYPE(PRECOMP, 0x1509)
LEAF_TYPE(ALIAS, 0x150a)
LEAF_TYPE(DEFARG, 0x150b)
LEAF_TYPE(FRIENDFCN, 0x150c)
LEAF_TYPE(MEMBER, 0x150d)
LEAF_TYPE(STMEMBER, 0x150e)
LEAF_TYPE(METHOD, 0x150f)
LEAF_TYPE(NESTTYPE, 0x1510)
LEAF_TYPE(ONEMETHOD, 0x1511)
LEAF_TYPE(NESTTYPEEX, 0x1512)
LEAF_TYPE(MEMBERMODIFY, 0x1513)
LEAF_TYPE(MANAGED, 0x1514)
LEAF_TYPE(TYPESERVER2, 0x1515)
LEAF_TYPE(STRIDED_ARRAY, 0x1516)
LEAF_TYPE(HLSL, 0x1517)
LEAF_TYPE(MODIFIER_EX, 0x1518)
LEAF_TYPE(INTERFACE, 0x1519)
LEAF_TYPE(BINTERFACE, 0x151a)
LEAF_TYPE(VECTOR, 0x151b)
LEAF_TYPE(MATRIX, 0x151c)
LEAF_TYPE(VFTABLE, 0x151d)

// ID leaf records. Subsequent leaf types may be referenced from .debug$S.

LEAF_TYPE(FUNC_ID, 0x1601)
LEAF_TYPE(MFUNC_ID, 0x1602)
LEAF_TYPE(BUILDINFO, 0x1603)
LEAF_TYPE(SUBSTR_LIST, 0x1604)
LEAF_TYPE(STRING_ID, 0x1605)
LEAF_TYPE(UDT_SRC_LINE, 0x1606)
LEAF_TYPE(UDT_MOD_SRC_LINE, 0x1607)

// Numeric leaf types. These are generally contained in other records, and not
// encountered in the main type stream.

LEAF_TYPE(NUMERIC, 0x8000)
LEAF_TYPE(CHAR, 0x8000)
LEAF_TYPE(SHORT, 0x8001)
LEAF_TYPE(USHORT, 0x8002)
LEAF_TYPE(LONG, 0x8003)
LEAF_TYPE(ULONG, 0x8004)
LEAF_TYPE(REAL32, 0x8005)
LEAF_TYPE(REAL64, 0x8006)
LEAF_TYPE(REAL80, 0x8007)
LEAF_TYPE(REAL128, 0x8008)
LEAF_TYPE(QUADWORD, 0x8009)
LEAF_TYPE(UQUADWORD, 0x800a)
LEAF_TYPE(REAL48, 0x800b)
LEAF_TYPE(COMPLEX32, 0x800c)
LEAF_TYPE(COMPLEX64, 0x800d)
LEAF_TYPE(COMPLEX80, 0x800e)
LEAF_TYPE(COMPLEX128, 0x800f)
LEAF_TYPE(VARSTRING, 0x8010)
LEAF_TYPE(OCTWORD, 0x8017)
LEAF_TYPE(UOCTWORD, 0x8018)
LEAF_TYPE(DECIMAL, 0x8019)
LEAF_TYPE(DATE, 0x801a)
LEAF_TYPE(UTF8STRING, 0x801b)
LEAF_TYPE(REAL16, 0x801c)

// Padding bytes. These are emitted into alignment bytes in the type stream.

LEAF_TYPE(PAD0, 0xf0)
LEAF_TYPE(PAD1, 0xf1)
LEAF_TYPE(PAD2, 0xf2)
LEAF_TYPE(PAD3, 0xf3)
LEAF_TYPE(PAD4, 0xf4)
LEAF_TYPE(PAD5, 0xf5)
LEAF_TYPE(PAD6, 0xf6)
LEAF_TYPE(PAD7, 0xf7)
LEAF_TYPE(PAD8, 0xf8)
LEAF_TYPE(PAD9, 0xf9)
LEAF_TYPE(PAD10, 0xfa)
LEAF_TYPE(PAD11, 0xfb)
LEAF_TYPE(PAD12, 0xfc)
LEAF_TYPE(PAD13, 0xfd)
LEAF_TYPE(PAD14, 0xfe)
LEAF_TYPE(PAD15, 0xff)
