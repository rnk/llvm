//===-- CVBuiltinTypes.def - All CodeView builtin type indices --*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// See TYPE_ENUM_e in cvinfo.h. This should match the constants there.
//
//===----------------------------------------------------------------------===//

BUILTIN_TYPE(T_NOTYPE       , 0x0000)
BUILTIN_TYPE(T_ABS          , 0x0001)
BUILTIN_TYPE(T_SEGMENT      , 0x0002)
BUILTIN_TYPE(T_VOID         , 0x0003)
BUILTIN_TYPE(T_HRESULT      , 0x0008)
BUILTIN_TYPE(T_32PHRESULT   , 0x0408)
BUILTIN_TYPE(T_64PHRESULT   , 0x0608)

BUILTIN_TYPE(T_PVOID        , 0x0103)
BUILTIN_TYPE(T_PFVOID       , 0x0203)
BUILTIN_TYPE(T_PHVOID       , 0x0303)
BUILTIN_TYPE(T_32PVOID      , 0x0403)
BUILTIN_TYPE(T_32PFVOID     , 0x0503)
BUILTIN_TYPE(T_64PVOID      , 0x0603)

BUILTIN_TYPE(T_CURRENCY     , 0x0004)
BUILTIN_TYPE(T_NBASICSTR    , 0x0005)
BUILTIN_TYPE(T_FBASICSTR    , 0x0006)
BUILTIN_TYPE(T_NOTTRANS     , 0x0007)
BUILTIN_TYPE(T_BIT          , 0x0060)
BUILTIN_TYPE(T_PASCHAR      , 0x0061)
BUILTIN_TYPE(T_BOOL32FF     , 0x0062)

#define BUILTIN_TYPE_FAMILY(name, lowbyte) \
  BUILTIN_TYPE(T_##name         , 0x0000 | lowbyte) \
  BUILTIN_TYPE(T_P##name        , 0x0100 | lowbyte) \
  BUILTIN_TYPE(T_PF##name       , 0x0200 | lowbyte) \
  BUILTIN_TYPE(T_PH##name       , 0x0300 | lowbyte) \
  BUILTIN_TYPE(T_32P##name      , 0x0400 | lowbyte) \
  BUILTIN_TYPE(T_32PF##name     , 0x0500 | lowbyte) \
  BUILTIN_TYPE(T_64P##name      , 0x0600 | lowbyte)

// These basic types consistently define a family of pointer types using the
// same bitpattern.
BUILTIN_TYPE_FAMILY(CHAR    , 0x0010)
BUILTIN_TYPE_FAMILY(UCHAR   , 0x0020)
BUILTIN_TYPE_FAMILY(RCHAR   , 0x0070)
BUILTIN_TYPE_FAMILY(WCHAR   , 0x0071)
BUILTIN_TYPE_FAMILY(CHAR16  , 0x007a)
BUILTIN_TYPE_FAMILY(CHAR32  , 0x007b)
BUILTIN_TYPE_FAMILY(INT1    , 0x0068)
BUILTIN_TYPE_FAMILY(UINT1   , 0x0069)
BUILTIN_TYPE_FAMILY(SHORT   , 0x0011)
BUILTIN_TYPE_FAMILY(USHORT  , 0x0021)
BUILTIN_TYPE_FAMILY(INT2    , 0x0072)
BUILTIN_TYPE_FAMILY(UINT2   , 0x0073)
BUILTIN_TYPE_FAMILY(LONG    , 0x0012)
BUILTIN_TYPE_FAMILY(ULONG   , 0x0022)
BUILTIN_TYPE_FAMILY(INT4    , 0x0074)
BUILTIN_TYPE_FAMILY(UINT4   , 0x0075)
BUILTIN_TYPE_FAMILY(QUAD    , 0x0013)
BUILTIN_TYPE_FAMILY(UQUAD   , 0x0023)
BUILTIN_TYPE_FAMILY(INT8    , 0x0076)
BUILTIN_TYPE_FAMILY(UINT8   , 0x0077)
BUILTIN_TYPE_FAMILY(OCT     , 0x0014)
BUILTIN_TYPE_FAMILY(UOCT    , 0x0024)
BUILTIN_TYPE_FAMILY(INT16   , 0x0078)
BUILTIN_TYPE_FAMILY(UINT16  , 0x0079)
BUILTIN_TYPE_FAMILY(REAL16  , 0x0046)
BUILTIN_TYPE_FAMILY(REAL32  , 0x0040)
BUILTIN_TYPE_FAMILY(REAL32PP, 0x0045)
BUILTIN_TYPE_FAMILY(REAL48  , 0x0044)
BUILTIN_TYPE_FAMILY(REAL64  , 0x0041)
BUILTIN_TYPE_FAMILY(REAL80  , 0x0042)
BUILTIN_TYPE_FAMILY(REAL128 , 0x0043)
BUILTIN_TYPE_FAMILY(CPLX32  , 0x0050)
BUILTIN_TYPE_FAMILY(CPLX64  , 0x0051)
BUILTIN_TYPE_FAMILY(CPLX80  , 0x0052)
BUILTIN_TYPE_FAMILY(CPLX128 , 0x0053)
BUILTIN_TYPE_FAMILY(BOOL08  , 0x0030)
BUILTIN_TYPE_FAMILY(BOOL16  , 0x0031)
BUILTIN_TYPE_FAMILY(BOOL32  , 0x0032)
BUILTIN_TYPE_FAMILY(BOOL64  , 0x0033)

// These follow the pointer type family pattern above
BUILTIN_TYPE(T_NCVPTR       , 0x01f0)
BUILTIN_TYPE(T_FCVPTR       , 0x02f0)
BUILTIN_TYPE(T_HCVPTR       , 0x03f0)
BUILTIN_TYPE(T_32NCVPTR     , 0x04f0)
BUILTIN_TYPE(T_32FCVPTR     , 0x05f0)
BUILTIN_TYPE(T_64NCVPTR     , 0x06f0)

#undef BUILTIN_TYPE
